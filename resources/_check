#!/bin/bash

# checks if all resources needed by JEFF-MC are present

# GLOBAL DEBUG
# you can enable global debug messages. raise the number for more verbose output
# Note: You MUST also raise the debug level in $HOME/jeffmc.conf
# as that file will be parsed at the beginning.
# The following debug level is only active until jeffmc.conf is parsed
DEBUG=0

# this should not be changed. do configuration in ~/jeffmc.conf
CONFIGFILE="$HOME/jeffmc.conf"
GREEN="$(tput setaf 2 2>/dev/null)"
RED="$(tput setaf 1 2>/dev/null)"
BOLD="$(tput bold 2>/dev/null)"
RESET="$(tput sgr0 2>/dev/null)"

function echoerr() { echo "error: $@" 1>&2; tput bel 2>/dev/null; }

function echodeb() {
	if [[ "$DEBUG" -gt "$1" ]]; then
		CURRENTDEBUGLEVEL="$1"
		shift
		echo "[DEBUG ${CURRENTDEBUGLEVEL}] $@"
	fi
}

echodeb 0 "_check was started by $0"

########################
# Begin tests
########################

# Configfile found?

echodeb 1 "checking if config file exists at $CONFIGFILE"
if [[ ! -f "$CONFIGFILE" ]]; then
	echoerr "config file not found at $CONFIGFILE"
	exit 1
fi 
echodeb 3 "OK: $CONFIGFILE exists"

echodeb 1 "parsing config file"
### parse config
source "$CONFIGFILE" || { echoerr "could not source $CONFIGFILE"; exit 1; }
echodeb 3 "OK: $CONFIGFILE parsed"

echodeb 2 "checking whether MCPATH is defined in config"
##### MCPATH defined?
if [[ -z "$MCPATH" ]]; then
	echoerr "\$MCPATH not defined in $CONFIGFILE"
	exit 1
fi
echodeb 3 "OK: MCPATH is defined as $MCPATH"

echodeb 2 "checking whether MCPATH is a directory"
##### MCPATH is a directory?
if [[ ! -d "$MCPATH" ]]; then
	echoerr "directory $MCPATH not found"
	exit 1
fi
echodeb 3 "OK: MCPATH is a directory"

echodeb 2 "checking whether $HOME/bin is a directory"
##### HOME/bin present?
if [[ ! -d "$HOME/bin" ]]; then
	echoerr "directory $HOME/bin not found"
	exit 1
fi
echodeb 3 "$HOME/bin is a directory"

echodeb 2 "checking if defined MCUSER $MCUSER equals current user $USER"
##### correct user?
if [[ "$(whoami)" != "$MCUSER" ]]; then
	echoerr "only $MCUSER can run this script"
        exit 1
fi
echodeb 3 "OK: current user is MCUSER $MCUSER"

echodeb 1 "entering MCPATH $MCPATH"
## enter MCPATH
cd "$MCPATH" || {
	echoerr "could not enter directory $MCPATH"
	exit 1
}
echodeb 3 "succesfully entered MCPATH $MCPATH"

source "$HOME/bin/_functions"
